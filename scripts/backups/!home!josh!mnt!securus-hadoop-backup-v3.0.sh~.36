#!/bin/sh
###Backup Script v3.0###

# Define parameters
date=$(date +'%d-%m-%Y')
time=$(date +'%H:%M:%S')
location="UK"
servername=$(cat /etc/hostname)
scripttype="hadoop-backup"
nasname="NAS"
nas="172.20.1.20"
log="/var/log/securus/$scripttype/securus-hadoop-backup.log"
errorlog="/var/log/securus/$scripttype/securus-hadoop-backup.error"

# If variables
reach=$(ping $nas -c 1 | grep -c Unreachable)
logfolder=$(find /var/log/securus/ -name $scripttype | grep -c backup)
pigz=$(find /usr/share/bash-completion/completions/ -name pigz | grep -c pigz)
sshfs=$(find /usr/bin/ -name sshfs | grep -c sshfs)


if [ $logfolder = "0" ] ; then
mkdir -p /var/log/securus/$scripttype/
fi

if [ $pigz = 0 ] ; then
apt-get install pigz -y --force
fi

if [ $sshfs = 0 ] ; then
apt-get install sshfs -y --force
fi

echo "$servername"
{
echo "Starting on $date on $time"

if [ $reach = "0" ] ; then
mkdir -p /mnt/$scripttype/
sshfs josh@$nas:/$nasname/$servername/securus-hadoop-backup/ /mnt/$scripttype
elif [ $reach = 1 ] ; then
echo "$nasname is unreachable, please make sure $nas is pingable" 
exit 0
else
echo "Error reaching the mount variable, please contact the script creator or implement a fix."
exit 0
fi

mount=$(df -h | grep -c $nas)

if [ $mount = "0" ] ; then
echo "$nasname did not mount correctly"
echo "Restarting backup"
sleep 10
$0
exit 0
elif [ $mount -gt "0" ] ; then
echo "$nasname mounted correctly"
echo "Making date folder"
mkdir -p /mnt/$scripttype/$date/
echo "Taring the hadoop folder"
tar c --use-compress-program=pigz /var/lib/securus | openssl aes-256-cbc -salt > /mnt/$scripttype/$date/securus-$servername-hadoop.tar.gz.aes -k RJP0eLStOYrEOubqm08triGYjo2lDLbRpLGxbegnnXbcnsFdv6
else 
echo "Error mounting the mount variable, please contact the script creator or implement a fix."
exit 0
fi

echo "Syncing changes"
sync
echo "Unmounting external volume"
fusermount -u /mnt/$scripttype/
umount -lv /mnt/$scripttype/

mount=$(df -h | grep -c $nas)

if [ $mount = "0" ] ; then
echo "$nasname unmounted correctly"
else 
echo "Error unmounting the mount variable, please contact the script creator or implement a fix."
exit 0
fi

echo "Finishing at $date on $time"
} >> $log 2>> | grep -vi leadin >> $errorlog

exit 0
